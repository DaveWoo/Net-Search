//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Spider.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IManager")]
    public interface IManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/CreateSitePage", ReplyAction="http://tempuri.org/IManager/CreateSitePageResponse")]
        bool CreateSitePage(Net.Models.SitePage value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/CreateSitePage", ReplyAction="http://tempuri.org/IManager/CreateSitePageResponse")]
        System.Threading.Tasks.Task<bool> CreateSitePageAsync(Net.Models.SitePage value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/SelectAllSiteInfo", ReplyAction="http://tempuri.org/IManager/SelectAllSiteInfoResponse")]
        Net.Models.SiteInfo[] SelectAllSiteInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/SelectAllSiteInfo", ReplyAction="http://tempuri.org/IManager/SelectAllSiteInfoResponse")]
        System.Threading.Tasks.Task<Net.Models.SiteInfo[]> SelectAllSiteInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/SelectAllSitePage", ReplyAction="http://tempuri.org/IManager/SelectAllSitePageResponse")]
        Net.Models.SitePage[] SelectAllSitePage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IManager/SelectAllSitePage", ReplyAction="http://tempuri.org/IManager/SelectAllSitePageResponse")]
        System.Threading.Tasks.Task<Net.Models.SitePage[]> SelectAllSitePageAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IManagerChannel : Spider.ServiceReference.IManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ManagerClient : System.ServiceModel.ClientBase<Spider.ServiceReference.IManager>, Spider.ServiceReference.IManager {
        
        public ManagerClient() {
        }
        
        public ManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreateSitePage(Net.Models.SitePage value) {
            return base.Channel.CreateSitePage(value);
        }
        
        public System.Threading.Tasks.Task<bool> CreateSitePageAsync(Net.Models.SitePage value) {
            return base.Channel.CreateSitePageAsync(value);
        }
        
        public Net.Models.SiteInfo[] SelectAllSiteInfo() {
            return base.Channel.SelectAllSiteInfo();
        }
        
        public System.Threading.Tasks.Task<Net.Models.SiteInfo[]> SelectAllSiteInfoAsync() {
            return base.Channel.SelectAllSiteInfoAsync();
        }
        
        public Net.Models.SitePage[] SelectAllSitePage() {
            return base.Channel.SelectAllSitePage();
        }
        
        public System.Threading.Tasks.Task<Net.Models.SitePage[]> SelectAllSitePageAsync() {
            return base.Channel.SelectAllSitePageAsync();
        }
    }
}
